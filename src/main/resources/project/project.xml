<?xml version="1.0" encoding="UTF-8"?>
<exportedData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="commander.xsd" version="61" buildLabel="stanton_main_0_2012.11.17_04:56:01" buildVersion="4.2.0.123" passkey="dbb38997a6dee7940ab788cc610c7cf6a48def94">
  <exportPath>/projects/EC-Security-1.2.0.0</exportPath>
  <project>
    <projectName>@PLUGIN_NAME@</projectName>
    <description>This plugin implements a security policy engine.  Refer to the help link for the EC-Security plugin on the Administration > Plugins menu for further details.</description>
    <propertySheet>
      <property>
        <propertyName>CustomPolicies</propertyName>
        <description>Custom policy definitions.  Policies in this sheet will be preserved during upgrades.</description>
        <propertySheet>
        </propertySheet>
      </property>
      <property>
        <propertyName>ECPolicies</propertyName>
        <description>Policy definitions provided by CloudBees.  Do not edit these as they will be replaced during upgrades.</description>
        <propertySheet>
          <property>
            <propertyName>basic</propertyName>
            <description>A simple policy with three roles: administrator, designer, user</description>
            <expandable>0</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>initial</propertyName>
            <description>A policy that represents the initial state of Commander.</description>
            <expandable>0</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>sampleTeam</propertyName>
            <description>A sample team oriented policy.  Copy to the CustomPolicies property sheet before editing.</description>
            <expandable>0</expandable>
            <value></value>
          </property>
        </propertySheet>
      </property>
      <property>
        <propertyName>policyList</propertyName>
        <description>The customizable option list used by the policyLocation parameter of ApplyPolicy.</description>
        <propertySheet>
          <property>
            <propertyName>option1</propertyName>
            <description></description>
            <propertySheet>
              <property>
                <propertyName>text</propertyName>
                <description></description>
                <expandable>0</expandable>
                <value>Initial</value>
              </property>
              <property>
                <propertyName>value</propertyName>
                <description></description>
                <expandable>0</expandable>
                <value>/myProject/ECPolicies/initial</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>option2</propertyName>
            <description></description>
            <propertySheet>
              <property>
                <propertyName>text</propertyName>
                <description></description>
                <expandable>0</expandable>
                <value>Basic</value>
              </property>
              <property>
                <propertyName>value</propertyName>
                <description></description>
                <expandable>0</expandable>
                <value>/myProject/ECPolicies/basic</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>option3</propertyName>
            <description></description>
            <propertySheet>
              <property>
                <propertyName>text</propertyName>
                <description></description>
                <expandable>0</expandable>
                <value>Sample Team</value>
              </property>
              <property>
                <propertyName>value</propertyName>
                <description></description>
                <expandable>0</expandable>
                <value>/myProject/ECPolicies/sampleTeam</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>optionCount</propertyName>
            <description></description>
            <expandable>0</expandable>
            <value>3</value>
          </property>
        </propertySheet>
      </property>
      <property>
        <propertyName>scripts</propertyName>
        <description>Implementation scripts.  Do not edit.</description>
        <propertySheet>
          <property>
            <propertyName>apply.pm</propertyName>
            <description></description>
            <expandable>0</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>cleanup.pm</propertyName>
            <description></description>
            <expandable>0</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>factory.pm</propertyName>
            <description></description>
            <expandable>0</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>policy.pm</propertyName>
            <description></description>
            <expandable>0</expandable>
            <value></value>
          </property>
          <property>
            <propertyName>prolog</propertyName>
            <description>Add the plugin agent/lib directory to the Perl include path.</description>
            <expandable>0</expandable>
            <value>use ElectricCommander::PropMod qw(/myProject/scripts);</value>
          </property>
          <property>
            <propertyName>promoteHook</propertyName>
            <description>Global hook script called after a plugin is promoted.</description>
            <expandable>0</expandable>
            <value></value>
          </property>
        </propertySheet>
      </property>
      <property>
        <propertyName>teamList</propertyName>
        <description>Custom editor list for currently defined teams.</description>
        <propertySheet>
          <property>
            <propertyName>option1</propertyName>
            <description></description>
            <propertySheet>
              <property>
                <propertyName>text</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value> </value>
              </property>
              <property>
                <propertyName>value</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value></value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>option2</propertyName>
            <description></description>
            <propertySheet>
              <property>
                <propertyName>text</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>T1</value>
              </property>
              <property>
                <propertyName>value</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>T1</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>option3</propertyName>
            <description></description>
            <propertySheet>
              <property>
                <propertyName>text</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>T2</value>
              </property>
              <property>
                <propertyName>value</propertyName>
                <description></description>
                <expandable>1</expandable>
                <value>T2</value>
              </property>
            </propertySheet>
          </property>
          <property>
            <propertyName>optionCount</propertyName>
            <description></description>
            <expandable>1</expandable>
            <value>3</value>
          </property>
        </propertySheet>
      </property>
      <property>
        <propertyName>currentPolicy</propertyName>
        <description>The location of the most recently applied policy.</description>
        <expandable>0</expandable>
        <value></value>
      </property>
      <property>
        <propertyName>defaultResource</propertyName>
        <description>The resource to use when running policy scripts.</description>
        <expandable>1</expandable>
        <value>local</value>
      </property>
      <property>
        <propertyName>ec_setup</propertyName>
        <description>CloudBees CD plugin setup script. Do not edit.</description>
        <expandable>0</expandable>
        <value></value>
      </property>
    </propertySheet>
    <procedure>
      <procedureName>ApplyPolicy</procedureName>
      <description>Apply ACLs to the system to conform to the specified policy.</description>
      <jobNameTemplate>ApplyPolicy-$[jobId]</jobNameTemplate>
      <resourceName>$[/myProject/defaultResource]</resourceName>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>policyLocation</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>propertyPath</propertyName>
                          <expandable>1</expandable>
                          <value>/myProject/policyList</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>entry</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>policyLocation</formalParameterName>
        <defaultValue></defaultValue>
        <description>The property path for the security policy to apply.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>select</type>
      </formalParameter>
      <step>
        <stepName>Apply</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>$[/myProject/scripts/prolog]
use apply;
apply::changePolicy();</command>
        <condition></condition>
        <description>Apply the security policy to all controlled objects.</description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>1</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Cleanup</stepName>
        <alwaysRun>1</alwaysRun>
        <broadcast>0</broadcast>
        <command>$[/myProject/scripts/prolog]&#10;use cleanup;&#10;cleanup::main();</command>
        <condition></condition>
        <description>Remove jobs and workspace files for previous invocations.</description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>1</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>ApplyPolicyToAllPlugins</procedureName>
      <description>Apply the current security policy to all installed plugins.</description>
      <jobNameTemplate>ApplyPolicyToAllPlugins-$[jobId]</jobNameTemplate>
      <resourceName>$[/myProject/defaultResource]</resourceName>
      <workspaceName></workspaceName>
      <step>
        <stepName>ApplyPolicy</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>$[/myProject/scripts/prolog]
use apply;
apply::changePolicyForAllPlugins();</command>
        <condition></condition>
        <description>Apply the security policy to all plugins.</description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>1</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
      </step>
      <step>
        <stepName>Cleanup</stepName>
        <alwaysRun>1</alwaysRun>
        <broadcast>0</broadcast>
        <command>$[/myProject/scripts/prolog]
use cleanup;
cleanup::main();</command>
        <condition></condition>
        <description>Remove jobs and workspace files for previous invocations.</description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>1</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>ApplyPolicyToPlugin</procedureName>
      <description>Apply the current security policy to a newly promoted plugin.</description>
      <jobNameTemplate>ApplyPolicyToPlugin-$[jobId]</jobNameTemplate>
      <resourceName>$[/myProject/defaultResource]</resourceName>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>pluginName</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>pluginName</formalParameterName>
        <defaultValue></defaultValue>
        <description>The plugin being promoted.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>entry</type>
      </formalParameter>
      <step>
        <stepName>ApplyPolicy</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>$[/myProject/scripts/prolog]
use apply;
apply::applyToPlugin();</command>
        <condition></condition>
        <description>Apply the policy to the specified plugin.</description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>1</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
          <property>
            <propertyName>ec_customEditorData</propertyName>
            <propertySheet>
              <property>
                <propertyName>formType</propertyName>
                <expandable>1</expandable>
                <value>command</value>
              </property>
            </propertySheet>
          </property>
        </propertySheet>
      </step>
      <step>
        <stepName>Cleanup</stepName>
        <alwaysRun>1</alwaysRun>
        <broadcast>0</broadcast>
        <command>$[/myProject/scripts/prolog]
use cleanup;
cleanup::main();</command>
        <condition></condition>
        <description>Remove jobs and workspace files for previous invocations.</description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>1</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
    <procedure>
      <procedureName>CreateObject</procedureName>
      <acl>
        <inheriting>1</inheriting>
        <ownerType>procedure</ownerType>
        <aclEntry>
          <allowChangePermissions>0</allowChangePermissions>
          <allowExecute>1</allowExecute>
          <allowModify>0</allowModify>
          <allowRead>1</allowRead>
          <denyChangePermissions>0</denyChangePermissions>
          <denyExecute>0</denyExecute>
          <denyModify>0</denyModify>
          <denyRead>0</denyRead>
          <principalName>Everyone</principalName>
          <principalType>group</principalType>
        </aclEntry>
      </acl>
      <description>Create a project, resource, or workspace and associate it with an existing team.</description>
      <jobNameTemplate>CreateObject-$[jobId]</jobNameTemplate>
      <resourceName>$[/myProject/defaultResource]</resourceName>
      <workspaceName></workspaceName>
      <propertySheet>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <propertySheet>
            <property>
              <propertyName>parameters</propertyName>
              <propertySheet>
                <property>
                  <propertyName>objectType</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>option1</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Project</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>project</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option2</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Resource</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>resource</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option3</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Workspace</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>workspace</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>option4</propertyName>
                          <propertySheet>
                            <property>
                              <propertyName>text</propertyName>
                              <expandable>1</expandable>
                              <value>Artifact</value>
                            </property>
                            <property>
                              <propertyName>value</propertyName>
                              <expandable>1</expandable>
                              <value>artifact</value>
                            </property>
                          </propertySheet>
                        </property>
                        <property>
                          <propertyName>optionCount</propertyName>
                          <expandable>1</expandable>
                          <value>4</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>list</value>
                        </property>
                      </propertySheet>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>team</propertyName>
                  <propertySheet>
                    <property>
                      <propertyName>options</propertyName>
                      <propertySheet>
                        <property>
                          <propertyName>propertyPath</propertyName>
                          <expandable>1</expandable>
                          <value>/myProject/teamList</value>
                        </property>
                        <property>
                          <propertyName>type</propertyName>
                          <expandable>1</expandable>
                          <value>entry</value>
                        </property>
                      </propertySheet>
                    </property>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <formalParameter>
        <formalParameterName>objectName</formalParameterName>
        <defaultValue></defaultValue>
        <description>The name of the object to create.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>select</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>objectType</formalParameterName>
        <defaultValue></defaultValue>
        <description>The type of object to create.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>1</required>
        <type>select</type>
      </formalParameter>
      <formalParameter>
        <formalParameterName>team</formalParameterName>
        <defaultValue></defaultValue>
        <description>The name of a team that should have access to the new object.</description>
        <expansionDeferred>0</expansionDeferred>
        <required>0</required>
        <type>select</type>
      </formalParameter>
      <step>
        <stepName>Create</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>$[/myProject/scripts/prolog]
use factory;
factory::main();</command>
        <condition></condition>
        <description>Create a new object, associate it with a team and apply the current security policy.</description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>1</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
      <step>
        <stepName>Cleanup</stepName>
        <alwaysRun>1</alwaysRun>
        <broadcast>0</broadcast>
        <command>$[/myProject/scripts/prolog]
use cleanup;
cleanup::main();</command>
        <condition></condition>
        <description>Remove jobs and workspace files for previous invocations.</description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>1</parallel>
        <postProcessor></postProcessor>
        <releaseMode>none</releaseMode>
        <resourceName></resourceName>
        <shell>ec-perl</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <propertySheet>
        </propertySheet>
      </step>
    </procedure>
  </project>
</exportedData>
