<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>@PLUGIN_KEY@ Help</title>
        <link rel="stylesheet" href="../../plugins/@PLUGIN_NAME@/pluginhelp.css"
            type="text/css" media="screen" />
    </head>

    <body>
        <p>Revised on June 15, 2020</p>
        <div class="help">
            <h1 class="help">@PLUGIN_KEY@</h1>
            <h2 class="help">Overview</h2>
            <p class="help">
                This plugin provides a mechanism for defining a set of rules for
                adjusting ACLs of various objects in the system known as a 'policy'.
                A policy is stored in a
                property and applied by running the
                <a
                    href="../../link/runProcedure/projects/@PLUGIN_NAME@/procedures/ApplyPolicy">ApplyPolicy</a>
                procedure.
            </p>

            <h2 class="help">Policy Definition</h2>

            <p class="help">
                A policy defines a list of groups that will be managed by
                the policy.
                If a
                group is managed by the policy, it will be removed
                from or added to
                managed objects
                according to a set of rules defined
                in the policy.
            </p>
            <p class="help">
                A policy also optionally defines a set of teams. Each team
                has a
                name, one or more
                defined roles, and a list of objects that are
                associated with the team.
                Roles are
                abstract names that map to a
                single group in each team. Different teams can
                define
                different groups
                for the same role. Roles are referenced in rules to
                determine
                what
                privileges are to be granted to the specified groups.
            </p>
            <p class="help">
                The bulk of a policy is made of rules for how ACLs should
                be modified
                for a set of objects. The policy consists of a set of
                patterns that
                identify different objects in the system. For each
                pattern, there
                will
                be one or more rules that specify a group or role
                and the set of
                privileges that should be applied to the object's ACL.
                If a given
                object matches more than one pattern, then the first match
                wins.
            </p>
            <p class="help">
                When a rule is applied to an object, all ACL entries
                associated with
                any managed groups are replaced by the entries
                defined in the rule.
                Only ACL entries for managed groups and groups
                associated with
                defined
                roles will be modified. Any other acl entries
                will be left untouched.
                This allows automatically generated entries
                (for example, for
                project principals)
                to be ignored by the policy.
            </p>

            <h2 class="help">Policy Examples</h2>
            <p class="help">
                Refer to the predefined policies in the
                <a target="_blank"
                    href="../../link/projectDetails/projects/@PLUGIN_NAME@?tabGroup=properties">ECPolicies</a>
                property sheet of the
                @PLUGIN_KEY@ project
                for examples of some
                different types of policies:
            </p>
            <div class="help">
                <ul>
                    <li>initial - a configuration similar to the default settings after
                        a fresh install
                    </li>
                    <li>basic - a policy with three groups "EC-Admins", "EC-Designers",
                        "Everyone"
                    </li>
                    <li>sampleTeam - a team based policy with two defined teams</li>
                </ul>
            </div>

            <h2 class="help">Using the CreateObject Factory Procedure</h2>
            <p class="help">
                When configured to use a policy that defines one or more teams, the
                ability
                to create new projects and artifacts is restricted to global
                administrators. In order to
                allow team designers the ability to
                create new projects for their team,
                EC-Security provides the
                <a
                    href="../../link/runProcedure/projects/@PLUGIN_NAME@/procedures/CreateObject">CreateObject</a>
                procedure. This procedure prompts for the name of the new project,
                and the
                name of the team that should be the owner of the new project.
                If the
                user
                running the procedure is a member of a group that is
                allowed to create
                projects
                for the team, then the procedure will
                create the project, associate it
                with the
                team, and apply the security
                policy to the newly created project. The
                CreateObject procedure also
                supports creating artifacts, resources
                and workspaces that
                are
                associated with a team.
            </p>
            <p class="help">
                Note that the security policy property is updated to
                reflect the
                existence
                of a new project for the specified team. If the
                project is deleted at
                some
                point in the future, then it should be
                removed from the corresponding
                entry
                in the policy definition.
            </p>
            <h2 class="help">Policy Format Specification</h2>
            <p class="help">
                A policy definition is a
                <a href="http://www.json.org">JSON</a>
                formatted object that conforms to the following structure:
            </p>
            <div class="help">
                POLICY is
                <pre>
      { "managedGroups" : [ GROUPNAME, ... ],
        "teams" : { TEAMNAME : TEAM, ... },
        "systemObject" : [
           { "name" : OBJECTNAME, "acl" : [ ACLRULE, ... ] }, ... ],
        "propertySheet" : [
           { "path" : PROPERTYPATH, "acl" : [ ACLRULE, ... ] }, ... ],
        "artifact" : [
           { "pattern" : NAMEPATTERN, "acl" : [ ACLRULE, ... ] }, ... ],
        "emailConfig" : [
           { "pattern" : NAMEPATTERN, "acl" : [ ACLRULE, ... ] }, ... ],
        "project" : [
           { "pattern" : NAMEPATTERN, "acl" : [ ACLRULE, ... ] }, ... ],
        "plugin" : [
           { "pattern" : NAMEPATTERN, "acl" : [ ACLRULE, ... ] }, ... ],
        "repository" : [
           { "pattern" : NAMEPATTERN, "acl" : [ ACLRULE, ... ] }, ... ],
        "resource" : [
           { "pattern" : NAMEPATTERN, "acl" : [ ACLRULE, ... ] }, ... ],
        "workspace" : [
           { "pattern" : NAMEPATTERN, "acl" : [ ACLRULE, ... ] }, ... ] } </pre>
            </div>
            <div class="help">
                TEAM is
                <pre>
      { "roles" : { ROLENAME : ROLE, ... },
        "project" : [ PROJECTNAME, ... ],
        "resource" : [ RESOURCENAME, ... ],
        "workspace" : [ WORKSPACENAME, ... ]} </pre>
            </div>
            <div class="help">
                ROLE is
                <pre>
      { "group" : GROUPNAME,
        "create" : [ CREATETYPE, ... ] } </pre>
            </div>
            <div class="help">
                ACLRULE is one of:
                <pre>
      { "group" : GROUPNAME, "access" : ACCESS }
      { "user" : USERNAME, "access" : ACCESS }
      { "project" : PROJECTNAME, "access" : ACCESS }
      { "role" : ROLENAME, "access" : ACCESS }</pre>
            </div>
            <div class="help">
                ACCESS is
                <pre>
      [ READPERM, MODIFYPERM, EXECUTEPERM, CHANGEPERM ] </pre>
            </div>
            <div class="help">
                *PERM is one of:
                <pre>
      "allow", "deny", "inherit" </pre>

            </div>
            <div class="help">
                OBJECTNAME is one of
                <pre>
        "server", "admin", "artifacts", "directory", "emailConfigs", "log",
        "licensing", "plugins", "priority", "projects", "repositories",
        "resources", "session", "test", "workspaces" </pre>

            </div>
            <div class="help">
                CREATETYPE is one of
                <pre>
        "artifact", "project", "resource", "workspace"
         </pre>
            </div>
            <p class="help">GROUPNAME is a string containing the name of a group
            </p>
            <p class="help">USERNAME is a string containing the name of a user
            </p>
            <p class="help">NAMEPATTERN is a string containing a regular expression
                for the name of the object to operate on
            </p>
            <p class="help">PROJECTNAME is a string containing the name of a project
            </p>
            <p class="help">PROPERTYPATH is a string containing the path to a property
                sheet the names of objects being considered for modification
            </p>
            <p class="help">TEAMNAME is a string containing a name for the team
            </p>
            <p class="help">ROLENAME is a string containing a name for the role
            </p>
            <p class="help">RESOURCENAME is a string containing the name of a resource
            </p>
            <p class="help">WORKSPACENAME is a string containing the name of a
                workspace
            </p>

            <h1 class="help">Release Notes</h1>

            <h2>@PLUGIN_KEY@-1.2.4</h2>
            <ul>
                <li>Renaming from "CloudBees Flow" to "CloudBees CD".</li>
            </ul>

            <h2>@PLUGIN_KEY@ 1.2.3</h2>
            <ul>
                <li>Renaming from "Electric Cloud" to "CloudBees"</li>
            </ul>

            <h2>@PLUGIN_KEY@ 1.2.2</h2>
            <ul>
                <li>Added metadata that is required for 9.0 release.</li>
            </ul>

            <h2>@PLUGIN_KEY@ 1.2.1</h2>
            <ul>
                <li>Renamed ElectricCommander to ElectricFlow.</li>
            </ul>

        </div>
    </body>
</html>
